{"ast":null,"code":"\"use strict\";\n\nvar getSerializers = require('./serializers');\n\nvar _blocksToNodes = require('./blocksToNodes');\n\nvar getImageUrl = require('./getImageUrl');\n\nvar mergeSerializers = require('./mergeSerializers');\n\nmodule.exports = {\n  blocksToNodes: function blocksToNodes(renderNode, props, defaultSerializers, serializeSpan) {\n    if (defaultSerializers) {\n      return _blocksToNodes(renderNode, props, defaultSerializers, serializeSpan);\n    } // Backwards-compatibility\n\n\n    var serializers = getSerializers(renderNode);\n    return _blocksToNodes(renderNode, props, serializers.defaultSerializers, serializers.serializeSpan);\n  },\n  getSerializers: getSerializers,\n  getImageUrl: getImageUrl,\n  mergeSerializers: mergeSerializers\n};","map":{"version":3,"mappings":";;AAAA,IAAMA,cAAc,GAAGC,OAAO,CAAC,eAAD,CAA9B;;AACA,IAAMC,cAAa,GAAGD,OAAO,CAAC,iBAAD,CAA7B;;AACA,IAAME,WAAW,GAAGF,OAAO,CAAC,eAAD,CAA3B;;AACA,IAAMG,gBAAgB,GAAGH,OAAO,CAAC,oBAAD,CAAhC;;AAEAI,MAAM,CAACC,OAAPD,GAAiB;EACfH,aAAa,EAAE,uBAACK,UAAD,EAAaC,KAAb,EAAoBC,kBAApB,EAAwCC,aAAxC,EAA0D;IACvE,IAAID,kBAAJ,EAAwB;MACtB,OAAOP,cAAa,CAACK,UAAD,EAAaC,KAAb,EAAoBC,kBAApB,EAAwCC,aAAxC,CAApB;IAFqE,EAKvE;;;IACA,IAAMC,WAAW,GAAGX,cAAc,CAACO,UAAD,CAAlC;IACA,OAAOL,cAAa,CAClBK,UADkB,EAElBC,KAFkB,EAGlBG,WAAW,CAACF,kBAHM,EAIlBE,WAAW,CAACD,aAJM,CAApB;EARa;EAefV,cAAc,EAAdA,cAfe;EAgBfG,WAAW,EAAXA,WAhBe;EAiBfC,gBAAgB,EAAhBA;AAjBe,CAAjBC","names":["getSerializers","require","blocksToNodes","getImageUrl","mergeSerializers","module","exports","renderNode","props","defaultSerializers","serializeSpan","serializers"],"sources":["/home/sony/Data/FE/company-profile/node_modules/@sanity/block-content-to-hyperscript/src/internals.js"],"sourcesContent":["const getSerializers = require('./serializers')\nconst blocksToNodes = require('./blocksToNodes')\nconst getImageUrl = require('./getImageUrl')\nconst mergeSerializers = require('./mergeSerializers')\n\nmodule.exports = {\n  blocksToNodes: (renderNode, props, defaultSerializers, serializeSpan) => {\n    if (defaultSerializers) {\n      return blocksToNodes(renderNode, props, defaultSerializers, serializeSpan)\n    }\n\n    // Backwards-compatibility\n    const serializers = getSerializers(renderNode)\n    return blocksToNodes(\n      renderNode,\n      props,\n      serializers.defaultSerializers,\n      serializers.serializeSpan\n    )\n  },\n  getSerializers,\n  getImageUrl,\n  mergeSerializers\n}\n"]},"metadata":{},"sourceType":"script"}