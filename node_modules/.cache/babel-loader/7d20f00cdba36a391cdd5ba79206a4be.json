{"ast":null,"code":"\"use strict\";\n\nvar global = require('../util/global');\n\nvar objectAssign = require('object-assign');\n\nmodule.exports = function () {\n  var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var Observable = opts.implementation || global.Observable;\n\n  if (!Observable) {\n    throw new Error('`Observable` is not available in global scope, and no implementation was passed');\n  }\n\n  return {\n    onReturn: function onReturn(channels, context) {\n      return new Observable(function (observer) {\n        channels.error.subscribe(function (err) {\n          return observer.error(err);\n        });\n        channels.progress.subscribe(function (event) {\n          return observer.next(objectAssign({\n            type: 'progress'\n          }, event));\n        });\n        channels.response.subscribe(function (response) {\n          observer.next(objectAssign({\n            type: 'response'\n          }, response));\n          observer.complete();\n        });\n        channels.request.publish(context);\n        return function () {\n          return channels.abort.publish();\n        };\n      });\n    }\n  };\n};","map":{"version":3,"mappings":";;AAAA,IAAMA,MAAM,GAAGC,OAAO,CAAC,gBAAD,CAAtB;;AACA,IAAMC,YAAY,GAAGD,OAAO,CAAC,eAAD,CAA5B;;AAEAE,MAAM,CAACC,OAAPD,GAAiB,YAAe;EAAA,IAAdE,IAAc,uEAAP,EAAO;EAC9B,IAAMC,UAAU,GAAGD,IAAI,CAACE,cAALF,IAAuBL,MAAM,CAACM,UAAjD;;EACA,IAAI,CAACA,UAAL,EAAiB;IACf,MAAM,IAAIE,KAAJ,CACJ,iFADI,CAAN;EAGD;;EAED,OAAO;IACLC,QAAQ,EAAE,kBAACC,QAAD,EAAWC,OAAX;MAAA,OACR,IAAIL,UAAJ,CAAe,oBAAY;QACzBI,QAAQ,CAACE,KAATF,CAAeG,SAAfH,CAAyB,eAAG;UAAA,OAAII,QAAQ,CAACF,KAATE,CAAeC,GAAfD,CAAJ;QAA5B;QACAJ,QAAQ,CAACM,QAATN,CAAkBG,SAAlBH,CAA4B,iBAAK;UAAA,OAAII,QAAQ,CAACG,IAATH,CAAcZ,YAAY,CAAC;YAACgB,IAAI,EAAE;UAAP,CAAD,EAAqBC,KAArB,CAA1BL,CAAJ;QAAjC;QACAJ,QAAQ,CAACU,QAATV,CAAkBG,SAAlBH,CAA4B,oBAAY;UACtCI,QAAQ,CAACG,IAATH,CAAcZ,YAAY,CAAC;YAACgB,IAAI,EAAE;UAAP,CAAD,EAAqBE,QAArB,CAA1BN;UACAA,QAAQ,CAACO,QAATP;QAFF;QAKAJ,QAAQ,CAACY,OAATZ,CAAiBa,OAAjBb,CAAyBC,OAAzBD;QACA,OAAO;UAAA,OAAMA,QAAQ,CAACc,KAATd,CAAea,OAAfb,EAAN;QAAP;MATF,EADQ;IAAA;EADL,CAAP;AARF","names":["global","require","objectAssign","module","exports","opts","Observable","implementation","Error","onReturn","channels","context","error","subscribe","observer","err","progress","next","type","event","response","complete","request","publish","abort"],"sources":["/home/sony/Data/FE/company-profile/node_modules/get-it/src/middleware/observable.js"],"sourcesContent":["const global = require('../util/global')\nconst objectAssign = require('object-assign')\n\nmodule.exports = (opts = {}) => {\n  const Observable = opts.implementation || global.Observable\n  if (!Observable) {\n    throw new Error(\n      '`Observable` is not available in global scope, and no implementation was passed'\n    )\n  }\n\n  return {\n    onReturn: (channels, context) =>\n      new Observable(observer => {\n        channels.error.subscribe(err => observer.error(err))\n        channels.progress.subscribe(event => observer.next(objectAssign({type: 'progress'}, event)))\n        channels.response.subscribe(response => {\n          observer.next(objectAssign({type: 'response'}, response))\n          observer.complete()\n        })\n\n        channels.request.publish(context)\n        return () => channels.abort.publish()\n      })\n  }\n}\n"]},"metadata":{},"sourceType":"script"}