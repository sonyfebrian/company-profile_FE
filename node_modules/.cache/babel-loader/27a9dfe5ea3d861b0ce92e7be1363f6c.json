{"ast":null,"code":"\"use strict\";\n\nmodule.exports = function () {\n  return {\n    onRequest: function onRequest(evt) {\n      if (evt.adapter !== 'xhr') {\n        return;\n      }\n\n      var xhr = evt.request;\n      var context = evt.context;\n\n      if ('upload' in xhr && 'onprogress' in xhr.upload) {\n        xhr.upload.onprogress = handleProgress('upload');\n      }\n\n      if ('onprogress' in xhr) {\n        xhr.onprogress = handleProgress('download');\n      }\n\n      function handleProgress(stage) {\n        return function (event) {\n          var percent = event.lengthComputable ? event.loaded / event.total * 100 : -1;\n          context.channels.progress.publish({\n            stage: stage,\n            percent: percent,\n            total: event.total,\n            loaded: event.loaded,\n            lengthComputable: event.lengthComputable\n          });\n        };\n      }\n    }\n  };\n};","map":{"version":3,"mappings":";;AAAAA,MAAM,CAACC,OAAPD,GAAiB;EAAA,OAAO;IACtBE,SAAS,EAAE,wBAAO;MAChB,IAAIC,GAAG,CAACC,OAAJD,KAAgB,KAApB,EAA2B;QACzB;MACD;;MAED,IAAME,GAAG,GAAGF,GAAG,CAACG,OAAhB;MACA,IAAMC,OAAO,GAAGJ,GAAG,CAACI,OAApB;;MAEA,IAAI,YAAYF,GAAZ,IAAmB,gBAAgBA,GAAG,CAACG,MAA3C,EAAmD;QACjDH,GAAG,CAACG,MAAJH,CAAWI,UAAXJ,GAAwBK,cAAc,CAAC,QAAD,CAAtCL;MACD;;MAED,IAAI,gBAAgBA,GAApB,EAAyB;QACvBA,GAAG,CAACI,UAAJJ,GAAiBK,cAAc,CAAC,UAAD,CAA/BL;MACD;;MAED,SAASK,cAAT,CAAwBC,KAAxB,EAA+B;QAC7B,OAAO,iBAAS;UACd,IAAMC,OAAO,GAAGC,KAAK,CAACC,gBAAND,GAA0BA,KAAK,CAACE,MAANF,GAAeA,KAAK,CAACG,KAArBH,GAA8B,GAAxDA,GAA8D,CAAC,CAA/E;UACAN,OAAO,CAACU,QAARV,CAAiBW,QAAjBX,CAA0BY,OAA1BZ,CAAkC;YAChCI,KAAK,EAALA,KADgC;YAEhCC,OAAO,EAAPA,OAFgC;YAGhCI,KAAK,EAAEH,KAAK,CAACG,KAHmB;YAIhCD,MAAM,EAAEF,KAAK,CAACE,MAJkB;YAKhCD,gBAAgB,EAAED,KAAK,CAACC;UALQ,CAAlCP;QAFF;MAUD;IACF;EA7BqB,CAAP;AAAjB","names":["module","exports","onRequest","evt","adapter","xhr","request","context","upload","onprogress","handleProgress","stage","percent","event","lengthComputable","loaded","total","channels","progress","publish"],"sources":["/home/sony/Data/FE/company-profile/node_modules/get-it/src/middleware/progress/browser-progress.js"],"sourcesContent":["module.exports = () => ({\n  onRequest: evt => {\n    if (evt.adapter !== 'xhr') {\n      return\n    }\n\n    const xhr = evt.request\n    const context = evt.context\n\n    if ('upload' in xhr && 'onprogress' in xhr.upload) {\n      xhr.upload.onprogress = handleProgress('upload')\n    }\n\n    if ('onprogress' in xhr) {\n      xhr.onprogress = handleProgress('download')\n    }\n\n    function handleProgress(stage) {\n      return event => {\n        const percent = event.lengthComputable ? (event.loaded / event.total) * 100 : -1\n        context.channels.progress.publish({\n          stage,\n          percent,\n          total: event.total,\n          loaded: event.loaded,\n          lengthComputable: event.lengthComputable\n        })\n      }\n    }\n  }\n})\n"]},"metadata":{},"sourceType":"script"}