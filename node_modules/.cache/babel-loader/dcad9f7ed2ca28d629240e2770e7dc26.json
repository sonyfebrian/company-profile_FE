{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar config_1 = require(\"./config\");\n\nvar hostReportError_1 = require(\"./util/hostReportError\");\n\nexports.empty = {\n  closed: true,\n  next: function (value) {},\n  error: function (err) {\n    if (config_1.config.useDeprecatedSynchronousErrorHandling) {\n      throw err;\n    } else {\n      hostReportError_1.hostReportError(err);\n    }\n  },\n  complete: function () {}\n};","map":{"version":3,"mappings":";;;;;;AACA;;AACA;;AAEaA,gBAAuB;EAClCC,MAAM,EAAE,IAD0B;EAElCC,IAAI,EAAJ,UAAKC,KAAL,EAAe,CAAqB,CAFF;EAGlCC,KAAK,EAAL,UAAMC,GAAN,EAAc;IACZ,IAAIC,gBAAOC,qCAAX,EAAkD;MAChD,MAAMF,GAAN;IACD,CAFD,MAEO;MACLG,kCAAgBH,GAAhB;IACD;EACF,CATiC;EAUlCI,QAAQ,EAAR,aAA6B;AAVK,CAAvB","names":["exports","closed","next","value","error","err","config_1","useDeprecatedSynchronousErrorHandling","hostReportError_1","complete"],"sources":["/home/sony/Data/FE/company-profile/node_modules/rxjs/src/internal/Observer.ts"],"sourcesContent":["import { Observer } from './types';\nimport { config } from './config';\nimport { hostReportError } from './util/hostReportError';\n\nexport const empty: Observer<any> = {\n  closed: true,\n  next(value: any): void { /* noop */},\n  error(err: any): void {\n    if (config.useDeprecatedSynchronousErrorHandling) {\n      throw err;\n    } else {\n      hostReportError(err);\n    }\n  },\n  complete(): void { /*noop*/ }\n};\n"]},"metadata":{},"sourceType":"script"}